http{
    # types{ # types of files needed so that nginx can serve them and in the headers the content type is set as text/<type> instead of only text/plain when not set
    #     text/html html htm;
    #     text/css css;
    #     text/javascript js;
    #     image/jpeg jpeg jpg;
    #     image/png png;
    #     image/gif gif;
    # }

    
    include mime.types; # include the mime.types file which has all the types of files that nginx can serve; an alternative to specicifying the types in the above block
    upstream backendserver {
        server localhost:1111;
        server localhost:2222;
        server localhost:3333;
        server localhost:4444;
    }
    server{
        listen 8080;
        root /Users/suhasks/learn-nginx; # URI to specify the location where all static files are stored and can be used to serve them

    location / {
        proxy_pass http://backendserver; # proxy_pass is used to pass the request to the upstream servers; by default the load balancing logic used is round-robin
    }
    rewrite ^/number/(\w+) /count/$1; # rewrite the URI to a different URI; $1 is the first match in the regex; this is a way to pass parameterised elements in the URL to the redirected URL
    location ~* /count/[0-9] {
        root /Users/suhasks/learn-nginx; # root URI is appended to the location URI to get the final path
        try_files /index.html =404;
    }
    location /programming-languages{
        root /Users/suhasks/learn-nginx; # /programming-languages is not added at the end of the root URI because it is already added in the location block as an endpoint path
    }
    # if path should not be appended, then instead of root, alias can be used
    location /programming{
        alias /Users/suhasks/learn-nginx/programming-languages;
    }
    location /tools{
        root /Users/suhasks/learn-nginx;
        try_files /tools/index.html /tools/index.htm /tools/tools.html =404; # if the file is not found, then try the next file in the list; return 404 if none of the files are found
    }

    location /learn {
        return 307 /programming; # redirect to /programming which actually aliases programming-languages
    }
}
}

events{

}